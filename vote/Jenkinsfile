pipeline {
    
    agent{
      docker{
        image 'python:2.7.16-slim'
        args '--user root'
	}
    }

    stages {
        stage('build'){
            when{
  	      changeset "**/vote/**"
            }
            steps{
                echo 'Compiling vote app'
		dir('vote'){
                  sh 'pip install -r requirements.txt' 
		}
            }
        }
        
        stage('test'){
            when{
  	      changeset "**/vote/**"
            }
            steps{
                echo 'Running Unit Tests on vote app'
		dir('vote'){
		  sh 'nosetests -v'
		}
            }
        }
    stage('docker-package'){
                        agent any
                        when{
                        changeset "**/vote/**"
                        branch 'master'
                        }
                steps{
                        echo 'Packaging vote app with docker'
                        script{
                                docker.withRegistry('https://index.docker.io/v1/', 'nmoiseykin-docker'){
                                workerImage = docker.build("nmoiseykin/worker:v${env.BUILD_ID}", "./vote")
                                workerImage.push()
                                workerImage.push("${env.BRANCH_NAME}")
                                workerImage.push("latest")
                                }
                        }
                        }
                        }    
    }
    post{
        always{
            echo 'Build pipeline for vote app is complete..'
        }
	failure{
		slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>")
	}
	success{
		slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>")
	}
    }
}
